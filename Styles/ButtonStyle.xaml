<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle1">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{DynamicResource colorForegroundMediumT}"/>
        <Setter Property="Foreground" Value="{DynamicResource colorForeground}"/>
        <Setter Property="Margin" Value="2,5"/>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorForeground}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackground}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorForeground}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackgroundLowT}"/>
            </Trigger>

        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle1Add">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{DynamicResource colorForegroundMediumT}"/>
        <Setter Property="Foreground" Value="{DynamicResource colorOn}"/>
        <Setter Property="Margin" Value="2,5"/>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorOn}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackground}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorOn}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackgroundLowT}"/>
            </Trigger>

        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle1Delete">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{DynamicResource colorForegroundMediumT}"/>
        <Setter Property="Foreground" Value="{DynamicResource colorOff}"/>
        <Setter Property="Margin" Value="2,5"/>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorOff}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackground}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorOff}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackgroundLowT}"/>
            </Trigger>

        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle2">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource colorForeground}"/>
        <Setter Property="Margin" Value="2,5"/>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorForeground}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackground}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorForeground}"/>
                <Setter Property="Foreground" Value="{DynamicResource colorBackgroundLowT}"/>
            </Trigger>

        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle3">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource colorOff}"/>
        <Setter Property="Margin" Value="2,5"/>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource colorForeground}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource colorForegroundLowT}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>